#TouhouDanmakufu[Single]
#ScriptVersion[3]
#include "script/default_system/Default_ShotConst.txt"
#include "./CommonFunction.dnh"

let spellName = "Orbital Sign \"Earth of 6 Moons\"";

#Title["02_Spell"]
#Text[spellName]
#BGM["./battle.ogg"]
#Player["./player/gt_Marisa/MarisaA.txt"]
#System["./system/Default_System.txt"]

let objBoss;
let objScene = GetEnemyBossSceneObjectID();
let maxHP = 2000;
let chargeUpSfx = CreateSoundObj(GetCurrentScriptDirectory() ~ "/sfx/se_ch00.wav", 100);
let bullet1Sfx = CreateSoundObj(GetCurrentScriptDirectory() ~ "/sfx/se_tan00.wav", 20);
let bullet2Sfx = CreateSoundObj(GetCurrentScriptDirectory() ~ "/sfx/se_kira00.wav", 30);

@Event{
    alternative (GetEventType())
    case (EV_REQUEST_LIFE){
        SetScriptResult(maxHP);
    }
    case (EV_REQUEST_TIMER){
        SetScriptResult(99);
    }
    case (EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);        
    }
}

@Initialize{
	// SetPlayerLife(99);

    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), GetCenterY() - 120, 60);

	ObjEnemyBossScene_StartSpell(objScene);
    ObjEnemy_SetDamageRate(objBoss, 12.5, 12.5);

    RenderSpellText(objBoss, spellName);
    RenderSpellShowcase;
	TDrawLoop;
    TFinalize;
}

let globalTimer = -60;
let summonTimer = 180;
let moveTimer = 120;
let attackTimes = 0;
let damageable = false;

@MainLoop{
	// Hitbox stuff:
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 64);
    if (!damageable && attackTimes > 3){
        ObjEnemy_SetDamageRate(objBoss, 100, 100);
        damageable = true;
    }

	// Bullet stuff:
    if (globalTimer >= 0 && globalTimer % summonTimer == 0){
        Activation(rand(0, 360));
        attackTimes += 1;
    }
    if (globalTimer >= 0 && globalTimer % moveTimer == 0){
        ObjMove_SetDestAtWeight(objBoss, rand(GetCenterX() + 80, GetCenterX() - 80), rand(GetCenterY() - 120, GetCenterY() - 60), 15, 30);
    }

	// Timer stuff:
	globalTimer += 1;
    yield;
}

function Activation(initialPhase){
    ObjSound_Play(bullet1Sfx);
    ascent (i in 0..6){
        let phase = (360 / 6) * i + initialPhase;
        if (i % 2 == 0){
            let blue = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 0, phase, DS_STAR_M_BLUE, 5);
            BlueStar(blue, phase);
        }else{
            let pink = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 0, phase, DS_STAR_M_PURPLE, 5);
            PinkStar(pink, phase);
        }
    }
}

let angleVelo = 1;
let distance = 140;
let blueCooldown = 120;
let pinkCooldown = 60;

task BlueStar(obj, phase){
    ObjShot_SetAutoDelete(obj, false);
    let ibx = ObjMove_GetX(objBoss);
    let iby = ObjMove_GetY(objBoss);
    let ipx = GetPlayerX();
    let ipy = GetPlayerY();
    let px = 0;
    let py = 0;
    let d = 0;
    ascent (i in 0..60){
        let cx = lerp(ibx, ipx, i / 60);
        let cy = lerp(iby, ipy, i / 60);
        d = lerp(0, distance, i / 60);
        phase += angleVelo;
        px = cx + cos(phase) * d;
        py = cy + sin(phase) * d;
        ObjMove_SetPosition(obj, px, py);
        yield;
    }
    d = distance;
    let attackCooldown = blueCooldown;
    while (attackCooldown > 0){
        phase += angleVelo;
        px = ipx + cos(phase) * d;
        py = ipy + sin(phase) * d;
        ObjMove_SetPosition(obj, px, py);
        attackCooldown -= 1;
        yield;
    }
    if (!Obj_IsDeleted(obj)){
        ObjSound_Play(bullet2Sfx);
        SemiCircleBulletA1(px, py, 1, GetAngleToPlayer(obj), 360, 12, DS_STAR_S_BLUE, 3);
    }
    ObjShot_FadeDelete(obj);
}

task PinkStar(obj, phase){
    ObjShot_SetAutoDelete(obj, false);
    let ibx = ObjMove_GetX(objBoss);
    let iby = ObjMove_GetY(objBoss);
    let ipx = GetPlayerX();
    let ipy = GetPlayerY();
    let px = 0;
    let py = 0;
    let d = 0;
    ascent (i in 0..60){
        let cx = lerp(ibx, ipx, i / 60);
        let cy = lerp(iby, ipy, i / 60);
        d = lerp(0, distance, i / 60);
        phase += angleVelo;
        px = cx + cos(phase) * d;
        py = cy + sin(phase) * d;
        ObjMove_SetPosition(obj, px, py);
        yield;
    }
    d = distance;
    let attackCooldown = pinkCooldown;
    while (attackCooldown > 0){
        phase += angleVelo;
        px = ipx + cos(phase) * d;
        py = ipy + sin(phase) * d;
        ObjMove_SetPosition(obj, px, py);
        attackCooldown -= 1;
        yield;
    }
    if (!Obj_IsDeleted(obj)){
        ObjSound_Play(bullet2Sfx);
        SemiCircleLooseLaserA1(px, py, 2, 180 + phase, 60, 80, 10, 3, DS_RICE_S_PURPLE, 3);
    }
    ObjShot_FadeDelete(obj);
} 

task TDrawLoop {
	let spriteBoss = GetCurrentScriptDirectory() ~ "sprites/PelicanGodAmber.png";
    ObjPrim_SetTexture(objBoss, spriteBoss);
    ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
    ObjSprite2D_SetDestCenter(objBoss);
}

task TFinalize{
    while (IsAlive(objBoss)){
        yield;
    }
    
	Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());

	if (ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT) 
	  + ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
		AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
	}
    return;
}
